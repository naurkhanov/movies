{"version":3,"sources":["components/layout/Header.jsx","components/layout/Footer.jsx","components/Movie.jsx","components/Movies.jsx","components/Preloader.jsx","components/Search.jsx","components/layout/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","id","Footer","Date","getFullYear","Movie","title","Title","year","Year","imdbID","type","Type","poster","Poster","src","Movies","movies","length","map","movie","Preloader","Search","searchMovies","useState","search","setSearch","setType","handleFilter","event","target","dataset","placeholder","value","onChange","e","onKeyDown","key","onClick","name","data-type","checked","Main","loading","setLoading","API_KEY","process","useEffect","fetch","then","response","json","data","setMovies","SearchMovies","str","categories","a","setM","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23841cef.chunk.js","sourcesContent":["import '../../index.css';\n\nconst Header = () => {\n  return (\n    <nav>\n      <div className=\"nav-wrapper  \">\n        <a href=\"#\" className=\"brand-logo\">\n          React Movies\n        </a>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li>\n            <a href=\"repo\">Repo</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport { Header };\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div>\n      <footer className=\"page-footer\">\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            Â© {new Date().getFullYear()} Copyright Text\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">\n              More Links\n            </a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport { Footer };\n","import React from 'react';\n\nconst Movie = ({\n  Title: title,\n  Year: year,\n  imdbID: id,\n  Type: type,\n  Poster: poster,\n}) => {\n\n\n  return (\n    <div id={id} className=\"card movie\">\n      <div className=\"card-image waves-effect waves-block waves-light\">\n        {poster === 'N/A' ? (\n          <img\n            className=\"activator\"\n            src={`https://via.placeholder.com/300x400?text=${title}`}\n          />\n        ) : (\n          <img className=\"activator\" src={poster} />\n        )}\n      </div>\n      <div className=\"card-content\">\n        <span className=\"card-title activator grey-text text-darken-4\">\n          {title}\n        </span>\n        <p>\n          {year} <span>{type}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport { Movie };\n","import React from 'react';\nimport { Movie } from './Movie';\n\nconst Movies = ({ movies }) => {\n\n  return (\n    <div className=\"movies\">\n      {movies?.length ? (\n        movies.map((movie) => {\n          return <Movie key={movie.imdbID} {...movie} />;\n        })\n      ) : (\n        <h4>Nothing Found</h4>\n      )}\n    </div>\n  );\n};\n\nexport { Movies };\n","import React from 'react';\n\nconst Preloader = () => {\n  return (\n    <div className=\"progress\">\n      <div className=\"indeterminate\"></div>\n    </div>\n  );\n};\n\nexport { Preloader };\n","import React, { useState } from 'react';\n\nconst Search = ({ searchMovies }) => {\n  const [search, setSearch] = useState('');\n\n  const [type, setType] = useState('all');\n\n  const handleKey = (e) => {\n    if (e.key === 'Enter') {\n      searchMovies(search, type);\n    }\n  };\n\n  const handleFilter = (event) => {\n    setType(() => event.target.dataset.type);\n    searchMovies(search, event.target.dataset.type);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s12\">\n        <div className=\"input-field \">\n          <input\n            id=\"email_inline\"\n            placeholder=\"search\"\n            type=\"search\"\n            className=\"validate\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            onKeyDown={handleKey}\n          />\n          <button\n            className=\"btn search-btn\"\n            onClick={() => searchMovies(search, type)}\n          >\n            Search\n          </button>\n        </div>\n        <div>\n          <label>\n            <input\n              className=\"with-gap\"\n              name=\"type\"\n              type=\"radio\"\n              data-type=\"all\"\n              checked={type === 'all'}\n              onChange={handleFilter}\n            />\n            <span>All</span>\n          </label>\n          <label>\n            <input\n              className=\"with-gap\"\n              name=\"type\"\n              type=\"radio\"\n              data-type=\"movie\"\n              checked={type === 'movie'}\n              onChange={handleFilter}\n            />\n            <span>Movies only</span>\n          </label>\n          <label>\n            <input\n              className=\"with-gap\"\n              name=\"type\"\n              type=\"radio\"\n              data-type=\"series\"\n              checked={type === 'series'}\n              onChange={handleFilter}\n            />\n            <span>Serials only</span>\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Search };\n","import React, { useEffect, useState } from 'react';\nimport { Movies } from '../Movies';\nimport { Preloader } from '../Preloader';\nimport { Search } from '../Search';\n\nfunction Main() {\n  const [loading, setLoading] = useState(true);\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  useEffect(() => {\n    fetch(`https://www.omdbapi.com/?apikey=${API_KEY}=matrix`)\n      .then((response) => response.json())\n      .then((data) => setMovies(data.Search, setLoading(false)));\n  }, []);\n\n  const [movies, setMovies] = useState([]);\n\n  const SearchMovies = async (str, categories) => {\n    setLoading(true);\n    await fetch(\n      `https://www.omdbapi.com/?apikey=${API_KEY}=${str}${\n        categories !== 'all' ? `&type=${categories}` : ''\n      }`,\n    )\n      .then((response) => response.json())\n      .then((data) => setMovies(data.Search, setLoading(false)));\n  };\n\n  return (\n    <main className=\"container content\">\n      <Search searchMovies={SearchMovies} />\n      {loading ? <Preloader /> : <Movies movies={movies} setM={setMovies} />}\n    </main>\n  );\n}\n\nexport { Main };\n","import { Header } from './components/layout/Header';\nimport { Footer } from './components/layout/Footer';\nimport { Main } from './components/layout/Main';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}